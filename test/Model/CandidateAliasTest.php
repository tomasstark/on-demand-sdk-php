<?php
/*
 * Copyright 2017 Sterling Talent Solutions
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * CandidateAliasTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Oda\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Kennect-API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2017-10-26T14:02:28.460-07:00
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Oda\Client;

/**
 * CandidateAliasTest Class Doc Comment
 *
 * @category    Class */
// * @description CandidateAlias
/**
 * @package     Oda\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class CandidateAliasTest extends \PHPUnit_Framework_TestCase
{
    private static $subject;
    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
        $data = array(
            'confirmed_no_middle_name' => true,
            'family_name' => 'family_name',
            'given_name' => 'given_name',
            'middle_name' => 'middle_name'
        );

        self::$subject = new Model\CandidateAlias($data);
    }
    /**
     * Test "CandidateAlias"
     */
    public function testCandidateAlias()
    {
        $expectedJson = '{
            "confirmedNoMiddleName": true,
            "familyName": "family_name",
            "givenName": "given_name",
            "middleName": "middle_name"
        }';
        $this->assertJsonStringEqualsJsonString($expectedJson, self::$subject->__toString());
    }

    /**
     * Test attribute "confirmed_no_middle_name"
     */
    public function testPropertyConfirmedNoMiddleName()
    {
        $this->assertTrue( self::$subject->getConfirmedNoMiddleName());
    }

    /**
     * Test attribute "family_name"
     */
    public function testPropertyFamilyName()
    {
        $this->assertEquals("family_name", self::$subject->getFamilyName());
    }

    /**
     * Test attribute "given_name"
     */
    public function testPropertyGivenName()
    {
        $this->assertEquals("given_name", self::$subject->getGivenName());
    }

    /**
     * Test attribute "middle_name"
     */
    public function testPropertyMiddleName()
    {
        $this->assertEquals("middle_name", self::$subject->getMiddleName());
    }
}
